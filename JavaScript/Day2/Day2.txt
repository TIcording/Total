문제
이름, 국어점수, 수학점수, 영어점수를 입력받아 총점과 평균을 출력하는 문서를작성해보자


연산자(Operater)
1. 산술 연산자
    +,-,*,/,%,**

2.비교 연산자
  >, <, >=,<= ,==, !=
  === 두 식의 값이 같고, 타입까지 같아야 참
  !== 두 식의 값이 다르고, 타입까지 달라야 참

    3 == 3 -> true
    '3' == 3 -> true
    '3' === 3 -> false

3.대입 연산자
    =,+=,-=,*=,/=,%=,**=

4. 증감 연산자
    ++변수(1더하기), --변수(1빼기), 변수++(1더하기),변수--(1빼기)

    num =10
    ++num       //11
    --num      // 10
    num++     // 11
    num--    // 10

    num = 10

    result = ++num // result =11, num=11
    result = num++ // result =11, num=12

5. 논리 연산자
    &&, ||, ! (and or not 순서)

6. 비트 연산자
    &, |, !, ^, <<, >>    

 


7. 삼항 연산자
    변수 = 조건식 ? 반환값1: 반환값2   
        조건식이 true일때 반환값1가 변수에 저장
        조건식이 false일때 반환값2가 변수에 저장


제어문
1. 조건문

    if문
    if(조건식){
        조건식의 결과가 true일 실행할 문장;
        ....

    }


    if~else 문
    if(조건식){
        조건식의 결과가 true일 실행할 문장;
        ....   
    }else{
        조건식의 결과가 false일때 실행할 문장;
        ....
    }


    if~else if~else 문     
    if(조건식1){
        조건식의 결과가 true일 실행할 문장;
        ....
    }else if(조건식2){
        조건식2의 결과가 true일때 실행할 문장;
        ....
    }else if(조건식3){
        조건식3의 결과가 true일때 실행할 문장;
        ....
    }else{
        모든 조건식이의 결과가 false일때 실행할 문장
    }

    switch문

    switch(변수){
        case 값1:
            변수와 값1이 같을 경우 실행할 문장;
            ....
            break;
        
        case 값2:
            변수와 값2이 같을 경우 실행할 문장;
            ....
            break;
        
        case 값3:
            변수와 값3이 같을 경우 실행할 문장;
            ....
            break;
        default:
            변수와 모든 값이 다를 경우 실행할 문장;
            ....
        
    }

문제.
달(month)을 입력받아 해당 달의 마지막 일이 몇일인지 출력하는 문서를 작성해보자



2. 반복문

    while 문

    while(조건식){
        조건식의 결과가 true인 동안 반복할 문장;
        ....
    }

    do~while문
    조건식의 결과가 처음부터 false 일 경우에도 1번은 {}에 문장을 실행함
    do {
        조건식 결과가 true인 동안 반복할 문장;
        ....
    }while(조건식);

    for 문

    for(초기값; 조건식; 증감식){
        조건식 결과가 true인 동안 반복할 문장;
        ....
    }

    ✔for 문의 무한루프
    for(;;){

    }

break문
-switch문 또는 반복중인 루프 내에서 사용하여 해당 문장을 완전히 종료시키고 다음에 위치한 실행문으로 이동

    num = 1;
    while(num<=10){
        if(num == 5) break;  
        console.log(num);   // 1 2 3 4
        num++;
    }


continue문
-반복중인 루프 내에서 사용하여 해당 루프의 나머지 부분을 건너뛰고 다음 반복문의 판단으로 넘어감

    num = 1;
    while(num<=10){
          
        console.log(num);   
        num++;
        if(num == 5) continue; //1 2 3 4
    }


문제.1
특정 숫자를 입력받아 짝수가 나올때까지 반복하는 문서

문제.2
3 6 9 게임을 출력하는 문서를 만들어보자
100까지


배열(Array)
- 이름과 인덱스로 참조되는 정렬된 값의 집합(자료구조)
- 배열을 구성하는 각각의 값을 배열 요소라고 하며, 배열에서의 위치를 가르키는 숫자를 인덱스라고 함

배열 선언
let 배열명;

배열 초기화
배열명 = [요소1,요소2,요소3..]

예)
let arr;
arr = [100,200,300]

let arr = [100,200,300]

배열 객체로 생성
const 배열명 = nuw Array(요소1,요소2,...);


배열의 접근
let arr;
arr = [100,200,300]

console.log(arr[0]);  // "100"
console.log(arr[1]);  // "200"
console.log(arr[3]);  // "300"    

자바스크립트 배열의 특징
1. 배열 요소의 타입이 고정되어 있지 않음
    let arr = [1, 1.5, '김사과', true]

2. 배열 요소의 인덱스가 연속적이지 않아도 됨
    let arr;
    arr[0] =1;
    arr[1] =20;
    arr[4] =5;
    ✔index 2,3dms undefined



Array 객체의 메소드

push()    : 배열의 요소를 추가
pop()     : 배열의 마지막 주소에 있는 값을 제거
shift()   : 배열의 첫번째 주소에 있는 값을 제거
concat()  : 두개의 배열을 합침
join()    : 배열 요소 사이에 원하는 문자를 삽입
reverse() : 배열을 역순으로 재배치
sort()    : 배열을 오름차순으로 정렬


배열을 이용한 반복

for in 문
변수에 배열의 인덱스 또는 객체의 key 가 저장되며 반복

    const arr = [10,20,30];
    const user = {'userid': 'apple', 'name': '김사과', 'age':20};

    for(변수 in 배열 또는 객체){
        배열의 요소 개수 또는 객체의 프로퍼티 개수만큼 반복할 문장;
        .....
    }

    in 이후에 arr, 즉 배열을 넣었을때 변수는 인덱스값이 리턴
    
    in 이후에 user,즉 객체를 넣었을때 변수는 key 값을 리턴받음


for of 문
-변수에 배열의 value 또는 객체의 value 가 저장되며 반복
- iterator 속성을 가지는 컬렉션 전용

    for(변수 of 배열 또는 객체){
        배열의 요소 개수 또는 객체의 프로퍼티 개수만큼 반복할 문장
    }
    

    in 이후에 arr, 즉 배열을 넣었을때 변수는 value이 리턴
    
    in 이후에 user,즉 객체를 넣었을때 변수는 value 값을 리턴받음
    
forEach문
배열에서만 사용 가능하며, 요소의 개수만큼 반복

    const arr = [10,20,30];

    배열명.forEach(function(변수1,변수2,변수3){
        배열의 요소 개수만큼 반복할 문장
    })

    변수1 : 배열의 요솟값 10 -> 20 -> 30 
    변수2 : 배열의 인덱스 0  -> 1 -> 2 
    변수3 : 생략가능, 배열객체 자체 [10,20,30] -> [10,20,30] -> [10,20,30]


과제
